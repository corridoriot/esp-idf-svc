# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.77"
name = "esp-idf-svc"
version = "0.49.1"
authors = ["Ivan Markov <ivan.markov@gmail.com>"]
build = "build.rs"
links = "esp_idf_svc"
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Implementation of the embedded-svc traits for ESP-IDF (Espressif's IoT Development Framework)"
documentation = "https://docs.esp-rs.org/esp-idf-svc/"
readme = "README.md"
keywords = [
    "embedded",
    "svc",
    "idf",
    "esp-idf",
    "esp32",
]
categories = [
    "embedded",
    "hardware-support",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/esp-rs/esp-idf-svc"
resolver = "2"

[lib]
name = "esp_idf_svc"
path = "src/lib.rs"
harness = false

[[example]]
name = "bt_gatt_server"
path = "examples/bt_gatt_server.rs"

[[example]]
name = "eth"
path = "examples/eth.rs"

[[example]]
name = "eth_spi_async"
path = "examples/eth_spi_async.rs"

[[example]]
name = "eventloop"
path = "examples/eventloop.rs"

[[example]]
name = "http_client"
path = "examples/http_client.rs"

[[example]]
name = "http_server"
path = "examples/http_server.rs"

[[example]]
name = "http_ws_client"
path = "examples/http_ws_client.rs"

[[example]]
name = "http_ws_server"
path = "examples/http_ws_server.rs"

[[example]]
name = "mqtt_client"
path = "examples/mqtt_client.rs"

[[example]]
name = "mqtt_client_async"
path = "examples/mqtt_client_async.rs"

[[example]]
name = "nvs_get_set_c_style"
path = "examples/nvs_get_set_c_style.rs"

[[example]]
name = "nvs_get_set_raw_storage"
path = "examples/nvs_get_set_raw_storage.rs"

[[example]]
name = "sd_mmc"
path = "examples/sd_mmc.rs"

[[example]]
name = "sd_spi"
path = "examples/sd_spi.rs"

[[example]]
name = "sntp"
path = "examples/sntp.rs"

[[example]]
name = "tcp"
path = "examples/tcp.rs"

[[example]]
name = "tcp_async"
path = "examples/tcp_async.rs"

[[example]]
name = "timer"
path = "examples/timer.rs"

[[example]]
name = "tls"
path = "examples/tls.rs"

[[example]]
name = "tls_async"
path = "examples/tls_async.rs"

[[example]]
name = "wifi"
path = "examples/wifi.rs"

[[example]]
name = "wifi_async"
path = "examples/wifi_async.rs"

[[example]]
name = "wifi_async_send"
path = "examples/wifi_async_send.rs"

[[example]]
name = "wifi_static_ip"
path = "examples/wifi_static_ip.rs"

[[example]]
name = "wps"
path = "examples/wps.rs"

[[example]]
name = "wps_async"
path = "examples/wps_async.rs"

[dependencies.embassy-futures]
version = "0.1"

[dependencies.embassy-time-driver]
version = "0.1"
features = ["tick-hz-1_000_000"]
optional = true

[dependencies.embedded-hal-async]
version = "1"
default-features = false

[dependencies.embedded-svc]
version = "0.28"
default-features = false

[dependencies.enumset]
version = "1"
default-features = false

[dependencies.esp-idf-hal]
path="../esp-idf-hal"
version = "0.44"
default-features = false

[dependencies.heapless]
version = "0.8"
default-features = false

[dependencies.log]
version = "0.4"
default-features = false

[dependencies.num_enum]
version = "0.7"
default-features = false

[dependencies.uncased]
version = "0.9.7"
default-features = false

[dev-dependencies.anyhow]
version = "1"

[dev-dependencies.async-io]
version = "2"

[dev-dependencies.esp-idf-sys]
version = "0.35"
features = ["binstart"]

[dev-dependencies.futures]
version = "0.3"

[dev-dependencies.postcard]
version = "1"

[dev-dependencies.serde]
version = "1"
features = ["derive"]
default-features = false

[dev-dependencies.serde_json]
version = "1"
features = ["alloc"]
default-features = false

[build-dependencies.embuild]
version = "0.32"

[features]
alloc = [
    "esp-idf-hal/alloc",
    "embedded-svc/alloc",
    "uncased/alloc",
]
alloc_handler = ["esp-idf-hal/alloc_handler"]
binstart = ["esp-idf-hal/binstart"]
critical-section = ["esp-idf-hal/critical-section"]
default = [
    "std",
    "binstart",
]
embassy-sync = ["esp-idf-hal/embassy-sync"]
experimental = ["embedded-svc/experimental"]
libstart = ["esp-idf-hal/libstart"]
native = ["esp-idf-hal/native"]
nightly = [
    "embedded-svc/nightly",
    "esp-idf-hal/nightly",
]
panic_handler = ["esp-idf-hal/panic_handler"]
pio = ["esp-idf-hal/pio"]
std = [
    "alloc",
    "log/std",
    "esp-idf-hal/std",
    "embedded-svc/std",
]
wake-from-isr = ["esp-idf-hal/wake-from-isr"]
